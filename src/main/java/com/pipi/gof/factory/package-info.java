package com.pipi.gof.factory;

/**
 1. 简单工厂模式
    定义一个Factory类，可以根据参数的不同返回不同类的实例，被创建的实例通常有共同的父类。
    又称为静态工厂模式（Static Factory Pattern），Factory类为静态类或包含静态方法。
    不属于23种GOF设计模式。
    实质是由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类实例。
    Factory类集中所有的创建逻辑，职责过重。一旦需要添加新的ConcreteProduct，则需要修改Factory逻辑。
    这样违背了OCP（开放-关闭原则）。

 2. 抽象工厂模式
    为创建一组相关或相互依赖对象提供了一个接口，而且无需指定它们的具体类。
    围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。
    接口是负责创建一个相关对象的工厂，不需要显式指定它们的类。每个生成的工厂都能按照工厂模式提供对象。

 3. 工厂方法模式
    定义一个用于创建对象的接口，让子类决定实例化哪一个类。用于在不指定待创建对象的具体类的情况下创建对象。
    主要意图是隐藏对象创建的复杂性
 */
